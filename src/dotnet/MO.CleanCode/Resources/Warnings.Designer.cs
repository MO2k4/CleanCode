//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CleanCode.Resources {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Warnings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Warnings() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CleanCode.Resources.Warnings", typeof(Warnings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Too many chained references. This might be violating the Law of Demeter. ({0} / {1}) ähnelt.
        /// </summary>
        internal static string ChainedReferences {
            get {
                return ResourceManager.GetString("ChainedReferences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Class contains too many methods. This might be violating the Single Responsibility Principle. ({0} / {1}) ähnelt.
        /// </summary>
        internal static string ClassTooBig {
            get {
                return ResourceManager.GetString("ClassTooBig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Excessive depth of nested code blocks. ({0} / {1}) ähnelt.
        /// </summary>
        internal static string ExcessiveDepth {
            get {
                return ResourceManager.GetString("ExcessiveDepth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This expression is too complex. ({0} / {1}) ähnelt.
        /// </summary>
        internal static string ExpressionTooComplex {
            get {
                return ResourceManager.GetString("ExpressionTooComplex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This argument is used as a flag in the method. This might be violating the Single Responsibility Principle. ähnelt.
        /// </summary>
        internal static string FlagArgument {
            get {
                return ResourceManager.GetString("FlagArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The usage of the suffix &apos;{0}&apos; is discouraged because it&apos;s too generic. Choose a meaningful name instead to clarify its intent and responsibilities. ähnelt.
        /// </summary>
        internal static string HollowTypeName {
            get {
                return ResourceManager.GetString("HollowTypeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The name of this method is too short to be meaningful. ähnelt.
        /// </summary>
        internal static string MethodNameNotMeaningful {
            get {
                return ResourceManager.GetString("MethodNameNotMeaningful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This method is too long, indicating that it has too much responsibility. ({0} / {1}) ähnelt.
        /// </summary>
        internal static string MethodTooLong {
            get {
                return ResourceManager.GetString("MethodTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This method has too many declarations. ({0} / {1}) ähnelt.
        /// </summary>
        internal static string TooManyDeclarations {
            get {
                return ResourceManager.GetString("TooManyDeclarations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There are too many interfaces being passed in to this constructor. It might be violating the Single Responsibility Principle. ({0} / {1}) ähnelt.
        /// </summary>
        internal static string TooManyDependencies {
            get {
                return ResourceManager.GetString("TooManyDependencies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This method requires too many arguments. ({0} / {1}) ähnelt.
        /// </summary>
        internal static string TooManyMethodArguments {
            get {
                return ResourceManager.GetString("TooManyMethodArguments", resourceCulture);
            }
        }
    }
}
